<Card Style="width:40rem;">
    <CardBody>
        <CardText>Posted by <a href="/Profile/@Comment.Owner.UserName">@Comment.Owner.UserName</a> at @Comment.CreatedAt.ToShortTimeString()</CardText>
        <CardText>@Comment.Message</CardText>
        <div class="row">
            <div class="col">
                <Button class="btn btn-small" Color="ButtonColor.Danger" To="#" Type="ButtonType.Link"><Icon Name="IconName.Heart" /> 1</Button>
                <Button @onclick="OnShowEditor" class="btn btn-small" Color="ButtonColor.None" Type="ButtonType.Link"><Icon Name="IconName.Messenger" /> Reply</Button>
                <Button class="btn btn-small" Color="ButtonColor.None" To="#" Type="ButtonType.Link"><Icon Name="IconName.Save" /> Save</Button>
            </div>
        </div>

        @if (ShowEditor)
        {
            <CommentEditorWindow @ref=EditorWindow Parent="Comment" OnCancel="OnCancelClick" OnComplete="OnCompleteClick"/>
        }

        @foreach(Comment child in Comment.Comments)
        {
            <br />
            <CommentCard Comment="child"/>
        }
    </CardBody>            
</Card>
<br />

@code 
{
    private bool ShowEditor = false;
    private CommentEditorWindow EditorWindow;

    [Parameter]
    public Comment? Comment { get; set; } = new Comment();

    public async Task OnShowEditor()
    {
        ShowEditor = true;
    }

    private void OnCancelClick()
    {
        this.Dispose();
    }

    private void OnCompleteClick()
    {
        this.Dispose();
    }

    private void Dispose()
    {
        this.ShowEditor = false;
        this.EditorWindow = null;
    }
}
