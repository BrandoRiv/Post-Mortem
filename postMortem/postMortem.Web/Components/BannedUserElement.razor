@if (IsBanned)
{
    <Callout Type="CalloutType.Warning">
        <strong>You are banned. </strong>You are banned from posting, commenting, or existing until @(Ban.UntilDate.ToShortDateString()) @(Ban.UntilDate.ToShortTimeString()) for @(Ban.BanReason).
    </Callout>
}

@code
{
    /// <summary>
    /// Does the user have an active ban?
    /// </summary>
    public bool IsBanned = false;

    /// <summary>
    /// Instance of the current ban.
    /// </summary>
    public BannedUser Ban = null;

    /// <summary>
    /// User the ban element applies to.
    /// </summary>
    [Parameter, EditorRequired]
    public User User { get; set; }

    /// <summary>
    /// Initialize the component.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        Ban = User.IsBanned;
        if (Ban != null)
        {
            IsBanned = true;
        }

        await base.OnInitializedAsync();
    }
}
