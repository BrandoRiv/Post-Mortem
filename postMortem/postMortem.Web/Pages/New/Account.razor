@page "/Account/{AccountName}";
@inject UserManager<User> Users
@inject postMortemWorker Worker

<h3>Account Details</h3>

<Tabs>
    <Tab Title="Posts" IsActive="true">
        <Content>
            <PostList Owner="@CurrentUser"/>
        </Content>
    </Tab>
    <Tab Title="Comments">
        <Content>
            <CommentList Owner="@CurrentUser"/>
        </Content>
    </Tab>
    <Tab Title="Upvotes">
        <Content>
            <p>It's quiet in here... too quiet.</p>
        </Content>
    </Tab>
    <Tab Title="Downvotes">
        <Content>
            <p>It's quiet in here... too quiet.</p>
        </Content>
    </Tab>
</Tabs>

@code 
{
    private User CurrentUser;

    /// <summary>
    /// Provides the authentication state of the user.
    /// </summary>
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthStat).User;
        CurrentUser = await Users.FindByNameAsync(user.Identity.Name);
    }
}