@page "/Posts/View/{ID}";
@inject postMortemWorker Worker
@inject NavigationManager Navigation
@inject IRefreshService RefreshService;
<div class="container d-flex justify-content-center align-items-center">
    <div class="row">
        <div class="col">
        <PostElement Post="Post"/>

        @if (Post.IsActive)
        {
            <h2>Reply: </h2>
            <CommentEditorElement Owner="User.Viewer" Parent="Post" />
        }

        <br/>
            <h2>Comments:</h2>
        <br />
        @foreach (Comment comment in Post.Comments)
        {
            <CommentElement Comment="comment"/>
        }

        </div>
    </div>
</div>

@code
{
    [Parameter]
    public string ID { get; set; }

    [Parameter]
    public Post? Post { get; set; } = new Post();

    /// <summary>
    /// The currently signed in user.
    /// </summary>
    [CascadingParameter] protected UserState User { get; set; }

    /// <summary>
    /// Initialize the component.
    /// </summary>
    protected override void OnInitialized()
    {
        RefreshService.RefreshRequested += OnRefreshRequest;
        Post = Worker.Posts.Get(Int32.Parse(ID));
        base.OnInitialized();
    }

    /// <summary>
    /// Has a refresh been requested? Should we refresh this element.
    /// </summary>
    private void OnRefreshRequest()
    {
        this.StateHasChanged();
    }
}
