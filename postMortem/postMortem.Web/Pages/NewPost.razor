@page "/Posts/New";
@inject postMortemWorker Worker
@inject NavigationManager Navigation

<h3>Create a new post!</h3>

<EditForm Model=@Post OnSubmit=@FormSubmitted>
    <DataAnnotationsValidator />
    <ServerSideValidator @ref=validator/>
    <div class="form-group">
        <label class="label-primary">Title</label>
        <InputText @bind-Value=Post.Title class="form-control" />
    </div>
    <div class="form-group">
        <label class="label-primary">Body</label>
        <InputText @bind-Value=Post.Message class="form-control" />
    </div>
    <br />
    <ValidationSummary />
    <input type="submit" class="btn btn-primary" value="Submit!" />
    <a href="~/"><input type="submit" class="btn btn-primary" value="Cancel" /></a>
</EditForm>

@code 
{
    ServerSideValidator validator;

    [Parameter]
    public Post? Post { get; set; } = new Post();
    private User User;

    protected override void OnInitialized()
    {
        this.Post = new Post();
    }

    private void FormSubmitted(EditContext editContext)
    {
        if (!editContext.Validate())
        {
            return;
        }

        // Make sure the user has a confirmed email before allowing them to post.
        if (User.EmailConfirmed == false)
        {
            validator.DisplayError("Body", "Your email must be confirmed before posting.");
        }

        Worker.Posts.Add(Post);

        // We're done here.
        Navigation.NavigateTo("~/");
    }
}
